generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comments {
  id             Int        @id @default(autoincrement())
  post_id        Int
  user_id        Int
  parent_id      Int?
  content        String     @db.Text
  image          String?    @db.VarChar(255)
  likes          Int?       @default(0)
  dislikes       Int?       @default(0)
  date           DateTime   @default(now()) @db.DateTime(0)
  posts          posts      @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "comments_ibfk_1")
  users          users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "comments_ibfk_2")
  comments       comments?  @relation("commentsTocomments", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "comments_ibfk_3")
  other_comments comments[] @relation("commentsTocomments")

  @@index([parent_id], map: "parent_id")
  @@index([post_id], map: "post_id")
  @@index([user_id], map: "user_id")
}

model posts {
  id       Int        @id @default(autoincrement())
  user_id  Int
  date     DateTime   @db.DateTime(0)
  title    String     @db.VarChar(255)
  genre    String?    @db.LongText
  status   Boolean?   @default(true)
  rate     Int        @db.TinyInt
  medium   String?     @db.VarChar(50)
  synopsis String?    @db.Text
  review   String?    @db.Text
  image    String?    @db.VarChar(255)
  likes    Int?       @default(0)
  dislikes Int?       @default(0)
  comments comments[]
  users    users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "posts_ibfk_1")

  @@index([user_id], map: "user_id")
}

model users {
  id              Int        @id @default(autoincrement())
  username        String     @db.VarChar(50)
  email           String     @db.VarChar(100)
  password        String     @db.VarChar(255)
  bio             String?    @db.Text
  profile_picture String?    @db.VarChar(255)
  created_at      DateTime   @default(now()) @db.Timestamp(0)
  comments        comments[]
  posts           posts[]
}
